apply plugin: 'com.android.application'

def versionMajor = 2 // bump for each iteration
def versionMinor = 2 // bump for each merge
def versionPatch = 5 // bump for each hotfix
def versionBuild = 0 // bump for dogfood builds, changes on your local

// Load Jacoco Only if needed
if (jacocoEnabled.toBoolean()) {
    project.logger.lifecycle('Applying jacoco build file: jacoco.gradle')
    apply from: rootProject.file("jacoco.gradle")
}


// General switch for tests types this control report generation but not yet unit test selection - TODO Make this a flag
def carvedTests = project.hasProperty('carvedTests')// ? project.getProperty('carvedTests') : false //Default value false

def carvedTestSrcDir = "src/carvedTest"
def testReportPrefix = "${buildDir}/carvedTest/testExecution"
def coverageReportPrefix = "${buildDir}/carvedTest/coverage"

if (carvedTests) {
    if (project.hasProperty('testName')) {
        def testName = project.getProperty('testName')
        println ""
        println "* Processing Carved Test ${testName}"
        println ""

        carvedTestSrcDir = "src/carvedTest/${testName}"

        testReportPrefix = "${buildDir}/carvedTest/${testName}/testExecution"
        coverageReportPrefix = "${buildDir}/carvedTest/${testName}/coverage"
    }
}

android {

    // Change the src folder for carved tests
    sourceSets {
        test {
            if (carvedTests) {
                java.srcDirs = ["$carvedTestSrcDir"]
            }
        }
    }

    compileSdkVersion 27
    defaultConfig {
        applicationId "fifthelement.theelement"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }

        animationsDisabled true

        unitTests.all {

            jvmArgs "-Xmx2g"

            // Nices output on the console/logs
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }

            test {
                //Get last path of default set path.
                def junitXmlTestTaskName = file("$reports.junitXml.destination").name
                def htmlTestTaskName = file("$reports.html.destination").name

                if (carvedTests) {
                    // Just use the same?
                    reports.junitXml.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                    reports.html.destination = file("$testReportPrefix/$junitXmlTestTaskName")
                }

                filter {
                    //specific test method
                    if (project.hasProperty('carvedTestsFilter')){
                        includeTestsMatching project.carvedTestsFilter
                    }
                }
            }
        }
    }

}

dependencies {
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    testImplementation "org.mockito:mockito-core:2.8.9"
    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'
    testImplementation group: 'com.google.guava', name: 'guava', version: '25.1-jre'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.2'
//    testImplementation 'org.mockito:mockito-core:2.6.3'
    testImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
}
