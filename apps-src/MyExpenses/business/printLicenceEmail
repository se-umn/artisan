#!/usr/local/bin/bash
function show_help() {
cat << EOF
   Usage: ${0##*/} [-p PACKAGE] [-l LANG] [-s] EMAIL
   Request key for EMAIL
   -p PACKAGE     Use package instead of Contrib
   -l LANG     Use LANG instead of the one from environment
   -s Use staging environment
   EMAIL
EOF
}

if [ -z "$TOKEN" ]
then
  echo "TOKEN must be set in environment"
  exit 1
fi

package=Contrib
lang=en_US
#endpoint=http://127.0.0.1:3000/users
endpoint=https://licencedb.myexpenses.mobi/users

while getopts "p:l:s" opt; do
    case "$opt" in
        p) package=$OPTARG
           ;;
        l) lang=$OPTARG
           ;;
        s) endpoint=https://myexpenses-licencedb-staging.herokuapp.com/users
           ;;
        '?')
            show_help >&2
            exit 1
            ;;
    esac
done
email=${@:$OPTIND:1}

words=( $email )
if [ ${#words[@]} -ne 1 ]
then
  echo "EMAIL must contain one word"
  show_help
  exit 1
fi

available_locales='bg cs de el en es eu fr he it ja ms pl pt ru tr vi'

if [[ -z "${lang// }" || ! " $available_locales " =~ .*\ $lang\ .* ]]
then
    echo "lang must be one of $available_locales"
    exit 1
fi

mapfile -t HTTP < <(curl -H "Authorization: Token $TOKEN" -H "Accept-Language: $lang" --silent --write-out "\n%{http_code}" -X POST $endpoint -d email=$email -d package=$package)

status=${HTTP[-1]}

if [ ! "$status" -eq 200  ]; then
  echo "Error HTTP status $status"
  exit 1
fi

key=${HTTP[0]}

echo "$package fÃ¼r ${email}: $key"
