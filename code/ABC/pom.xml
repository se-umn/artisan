<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.unipassau</groupId>
	<artifactId>carving</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>ABC Framework for Action-Based test Carving</name>
	<developers>
		<developer>
			<id>gambi</id>
			<name>Alessio Gambi</name>
			<email>alessio.gambi@uni-passau.de</email>
		</developer>
	</developers>

	<repositories>
		<repository>
			<!-- Temporary repo to store soot -->
			<id>project</id>
			<url>file:///${basedir}/local-repo</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<configuration>
					<programs>
						<program>
							<mainClass>de.unipassau.instrumentation.InstrumentTracer</mainClass>
							<id>instrument</id>
						</program>
						<program>
							<mainClass>de.unipassau.carving.Carver</mainClass>
							<id>carve</id>
						</program>
					</programs>
					<configurationDirectory>libs</configurationDirectory>
					<configurationSourceDirectory>libs</configurationSourceDirectory>
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
				</configuration>
			</plugin>
		</plugins>

	</build>

	<dependencies>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.20</version>
		</dependency>

		<!-- FIXME: "Install" Soot properly ... For some reason this is already 
			packaged in the soot distribution -->
		<!-- TODO This might break the current functionalities of ABC -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-simple</artifactId> 
			<version>1.7.20</version> </dependency> -->

		<!-- Soot for Instrumentation, Static Analysis and Code Generation -->
		<dependency>
			<groupId>sable</groupId>
			<artifactId>soot</artifactId>
			<version>2.6.0-SNAPSHOT</version>
		</dependency>
		<!-- Utility for Decompiling Class files into Java -->
		<dependency>
			<groupId>org.bitbucket.mstrobel</groupId>
			<artifactId>procyon-compilertools</artifactId>
			<version>0.5.32</version>
		</dependency>
		<!-- Sets operators. TODO I am afraid that guava would be overkilling -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.0</version>
		</dependency>



		<!-- Graph Datastructures and Visualization -->
		<!-- TODO Check if ALL those libraries are really needed -->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-io</artifactId>
			<version>2.1.1</version>
		</dependency>

		<!-- Testing and Test Code generation. We need junit also during compile -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<!-- Utility to quickly find system settings and options -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
			<scope>test</scope>
		</dependency>

		<!-- Mocking -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.5.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<!-- We need to invoke soot passing Trace in a separate jar ... this is 
			how we create the jar -->
		<profile>
			<id>trace</id>
			<build>
				<finalName>trace</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.0.2</version>
						<configuration>
							<includes>
								<include>**/de/unipassau/tracing/*</include>
							</includes>
							<outputDirectory>./libs</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>
		<profile>
			<id>testsubject</id>
			<build>
				<finalName>testsubject</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>**/de/unipassau/testsubject/*</include>
							</includes>
							<outputDirectory>./libs</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>
</project>
